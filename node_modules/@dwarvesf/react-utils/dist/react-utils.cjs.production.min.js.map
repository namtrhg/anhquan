{"version":3,"file":"react-utils.cjs.production.min.js","sources":["../src/callAllHandlers.ts","../src/cleanChildren.ts","../src/createContext.tsx","../src/isSSR.ts","../src/sleep.ts","../src/truncate.ts"],"sourcesContent":["import { FunctionArguments } from './types'\n\nexport default function callAllHandlers<T extends (event: any) => void>(\n  ...fns: (T | undefined)[]\n) {\n  return function func(event: FunctionArguments<T>[0]) {\n    fns.some((fn) => {\n      fn?.(event)\n      return event?.defaultPrevented\n    })\n  }\n}\n","import React, { Children, isValidElement } from 'react'\n/**\n * Get a list of all valid React child elements\n * @param children\n */\nexport default function cleanChildren(\n  children: React.ReactChildren | React.ReactNode,\n): Array<React.ReactElement> {\n  return Children.toArray(children).filter((child) =>\n    isValidElement(child),\n  ) as React.ReactElement[]\n}\n","import React from 'react'\n\nexport interface CreateContextOptions {\n  /**\n   * If `true`, React will throw if context is `null` or `undefined`\n   * In some cases, you might want to support nested context, so you can set it to `false`\n   */\n  strict?: boolean\n  errorMessage?: string\n  name?: string\n}\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>]\n\nexport default function createContext<ContextType>(\n  options: CreateContextOptions = {},\n) {\n  const {\n    strict = true,\n    errorMessage = 'useContext must be inside a Provider with a value',\n    name,\n  } = options\n\n  const Context = React.createContext<ContextType | undefined>(undefined)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = React.useContext(Context)\n    if (!context && strict) throw new Error(errorMessage)\n\n    return context\n  }\n\n  return [\n    Context.Provider,\n    useContext,\n    Context,\n  ] as CreateContextReturn<ContextType>\n}\n","export default function isSSR() {\n  return typeof window === 'undefined'\n}\n","export default function sleep(time: number) {\n  return new Promise((resolve) => setTimeout(resolve, time))\n}\n","export default function truncate(\n  str: string,\n  num: number,\n  middle: boolean = false,\n  maskChar: string = '.',\n) {\n  if (str.length > num && str.length > 3) {\n    if (!middle) {\n      return `${str.substring(0, num)}${maskChar.repeat(3)}`\n    }\n\n    const a = Math.round((num * 2) / 3)\n    const b = num - a\n\n    return `${str.substring(0, a)}${maskChar.repeat(3)}${str.substring(\n      str.length - b,\n      str.length,\n    )}`\n  }\n\n  return str\n}\n"],"names":["fns","event","some","fn","defaultPrevented","children","Children","toArray","filter","child","isValidElement","options","strict","errorMessage","name","Context","React","createContext","undefined","displayName","Provider","context","useContext","Error","window","time","Promise","resolve","setTimeout","str","num","middle","maskChar","length","substring","repeat","a","Math","round","b"],"mappings":"kNAGKA,2BAAAA,yBAEI,SAAcC,GACnBD,EAAIE,MAAK,SAACC,gBACRA,GAAAA,EAAKF,SACEA,SAAAA,EAAOG,qDCFlBC,UAEOC,WAASC,QAAQF,GAAUG,QAAO,SAACC,UACxCC,iBAAeD,sCCMjBE,YAAAA,IAAAA,EAAgC,UAM5BA,EAHFC,OAAAA,kBAGED,EAFFE,aAAAA,aAAe,sDACfC,EACEH,EADFG,KAGIC,EAAUC,EAAMC,mBAAuCC,UAE7DH,EAAQI,YAAcL,EASf,CACLC,EAAQK,wBAPFC,EAAUL,EAAMM,WAAWP,OAC5BM,GAAWT,EAAQ,MAAM,IAAIW,MAAMV,UAEjCQ,GAMPN,mCCpCuB,oBAAXS,yDCDcC,UACrB,IAAIC,SAAQ,SAACC,UAAYC,WAAWD,EAASF,iCCApDI,EACAC,EACAC,EACAC,eADAD,IAAAA,GAAkB,YAClBC,IAAAA,EAAmB,KAEfH,EAAII,OAASH,GAAOD,EAAII,OAAS,EAAG,KACjCF,WACOF,EAAIK,UAAU,EAAGJ,GAAOE,EAASG,OAAO,OAG9CC,EAAIC,KAAKC,MAAa,EAANR,EAAW,GAC3BS,EAAIT,EAAMM,WAENP,EAAIK,UAAU,EAAGE,GAAKJ,EAASG,OAAO,GAAKN,EAAIK,UACvDL,EAAII,OAASM,EACbV,EAAII,eAIDJ"}