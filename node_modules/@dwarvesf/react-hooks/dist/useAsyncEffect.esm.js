import { useEffect } from 'react';

function useAsyncEffect(callback, onDestroyOrDependencies, dependencies) {
  if (onDestroyOrDependencies === void 0) {
    onDestroyOrDependencies = [];
  }

  if (dependencies === void 0) {
    dependencies = [];
  }

  var deps;
  var destroy;

  if (typeof onDestroyOrDependencies === 'function') {
    destroy = onDestroyOrDependencies;
    deps = dependencies;
  } else {
    deps = onDestroyOrDependencies || [];
  }

  useEffect(function () {
    var result;
    var mounted = true;
    var maybePromise = callback(function () {
      return mounted;
    });
    Promise.resolve(maybePromise).then(function (value) {
      result = value;
    });
    return function () {
      mounted = false;

      if (typeof destroy === 'function') {
        destroy(result);
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, deps);
}

export default useAsyncEffect;
//# sourceMappingURL=useAsyncEffect.esm.js.map
