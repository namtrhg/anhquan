{"version":3,"file":"useConstant.esm.js","sources":["../src/useConstant.ts"],"sourcesContent":["import { useRef } from 'react'\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nexport default function useConst<T extends any | (() => any)>(init: T) {\n  const ref = useRef<T | null>(null)\n\n  if (ref.current === null) {\n    ref.current = typeof init === 'function' ? init() : init\n  }\n\n  return ref.current as T\n}\n"],"names":["useConst","init","ref","useRef","current"],"mappings":";;AAEA;;;;;;;;SAOwBA,SAAsCC;AAC5D,MAAMC,GAAG,GAAGC,MAAM,CAAW,IAAX,CAAlB;;AAEA,MAAID,GAAG,CAACE,OAAJ,KAAgB,IAApB,EAA0B;AACxBF,IAAAA,GAAG,CAACE,OAAJ,GAAc,OAAOH,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,EAAjC,GAAsCA,IAApD;AACD;;AAED,SAAOC,GAAG,CAACE,OAAX;AACD;;;;"}