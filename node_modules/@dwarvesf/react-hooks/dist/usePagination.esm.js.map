{"version":3,"file":"usePagination.esm.js","sources":["../src/usePagination.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react'\n\nexport type UsePaginationParams = {\n  pageSize: number\n  totalPage: number\n  page: number\n}\n\nexport type UsePaginationResult = {\n  totalPage: number\n  pageSize: number\n  currentPage: number\n  // go to next page, optionally taking a boolean param to decide whether to go the last page immediately\n  next: (toLast?: boolean) => void\n  // back to previous page, optionally taking a boolean param to decide whether to go back to page 1 immediately\n  back: (toFirst?: boolean) => void\n  // jump to a specific page\n  go: (page: number) => void\n  hasNextPage: boolean\n  hasPreviousPage: boolean\n}\n\n/**\n * React hook that provides method for manipulating pages\n *\n * @param pageSize Required\n * @param page Required\n * @param totalPage Required\n */\nexport default function usePagination(\n  params: UsePaginationParams,\n): UsePaginationResult {\n  const { pageSize, totalPage, page: _page } = params\n\n  const [page, setPage] = useState(_page)\n\n  useEffect(() => {\n    setPage(params.page)\n  }, [params.page])\n\n  const hasNextPage = useMemo(() => page + 1 <= totalPage, [page, totalPage])\n  const hasPreviousPage = useMemo(() => page - 1 >= 1, [page])\n\n  const next = useCallback(\n    (toLast: boolean = false) => {\n      if (hasNextPage) {\n        if (toLast) {\n          setPage(totalPage)\n        } else {\n          setPage((p) => p + 1)\n        }\n      }\n    },\n    [hasNextPage, totalPage],\n  )\n\n  const back = useCallback(\n    (toFirst: boolean = false) => {\n      if (hasPreviousPage) {\n        if (toFirst) {\n          setPage(1)\n        } else {\n          setPage((p) => p - 1)\n        }\n      }\n    },\n    [hasPreviousPage],\n  )\n\n  const go = useCallback(\n    (page: number) => {\n      if (page >= 1 && page <= totalPage) {\n        setPage(page)\n      }\n    },\n    [totalPage],\n  )\n\n  return {\n    currentPage: page,\n    pageSize,\n    totalPage,\n    hasNextPage,\n    hasPreviousPage,\n    next,\n    back,\n    go,\n  }\n}\n"],"names":["usePagination","params","pageSize","totalPage","_page","page","useState","setPage","useEffect","hasNextPage","useMemo","hasPreviousPage","next","useCallback","toLast","p","back","toFirst","go","currentPage"],"mappings":";;AAsBA;;;;;;;;SAOwBA,cACtBC;AAEA,MAAQC,QAAR,GAA6CD,MAA7C,CAAQC,QAAR;AAAA,MAAkBC,SAAlB,GAA6CF,MAA7C,CAAkBE,SAAlB;AAAA,MAAmCC,KAAnC,GAA6CH,MAA7C,CAA6BI,IAA7B;;AAEA,kBAAwBC,QAAQ,CAACF,KAAD,CAAhC;AAAA,MAAOC,IAAP;AAAA,MAAaE,OAAb;;AAEAC,EAAAA,SAAS,CAAC;AACRD,IAAAA,OAAO,CAACN,MAAM,CAACI,IAAR,CAAP;AACD,GAFQ,EAEN,CAACJ,MAAM,CAACI,IAAR,CAFM,CAAT;AAIA,MAAMI,WAAW,GAAGC,OAAO,CAAC;AAAA,WAAML,IAAI,GAAG,CAAP,IAAYF,SAAlB;AAAA,GAAD,EAA8B,CAACE,IAAD,EAAOF,SAAP,CAA9B,CAA3B;AACA,MAAMQ,eAAe,GAAGD,OAAO,CAAC;AAAA,WAAML,IAAI,GAAG,CAAP,IAAY,CAAlB;AAAA,GAAD,EAAsB,CAACA,IAAD,CAAtB,CAA/B;AAEA,MAAMO,IAAI,GAAGC,WAAW,CACtB,UAACC,MAAD;QAACA;AAAAA,MAAAA,SAAkB;;;AACjB,QAAIL,WAAJ,EAAiB;AACf,UAAIK,MAAJ,EAAY;AACVP,QAAAA,OAAO,CAACJ,SAAD,CAAP;AACD,OAFD,MAEO;AACLI,QAAAA,OAAO,CAAC,UAACQ,CAAD;AAAA,iBAAOA,CAAC,GAAG,CAAX;AAAA,SAAD,CAAP;AACD;AACF;AACF,GATqB,EAUtB,CAACN,WAAD,EAAcN,SAAd,CAVsB,CAAxB;AAaA,MAAMa,IAAI,GAAGH,WAAW,CACtB,UAACI,OAAD;QAACA;AAAAA,MAAAA,UAAmB;;;AAClB,QAAIN,eAAJ,EAAqB;AACnB,UAAIM,OAAJ,EAAa;AACXV,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,CAAC,UAACQ,CAAD;AAAA,iBAAOA,CAAC,GAAG,CAAX;AAAA,SAAD,CAAP;AACD;AACF;AACF,GATqB,EAUtB,CAACJ,eAAD,CAVsB,CAAxB;AAaA,MAAMO,EAAE,GAAGL,WAAW,CACpB,UAACR,IAAD;AACE,QAAIA,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAIF,SAAzB,EAAoC;AAClCI,MAAAA,OAAO,CAACF,IAAD,CAAP;AACD;AACF,GALmB,EAMpB,CAACF,SAAD,CANoB,CAAtB;AASA,SAAO;AACLgB,IAAAA,WAAW,EAAEd,IADR;AAELH,IAAAA,QAAQ,EAARA,QAFK;AAGLC,IAAAA,SAAS,EAATA,SAHK;AAILM,IAAAA,WAAW,EAAXA,WAJK;AAKLE,IAAAA,eAAe,EAAfA,eALK;AAMLC,IAAAA,IAAI,EAAJA,IANK;AAOLI,IAAAA,IAAI,EAAJA,IAPK;AAQLE,IAAAA,EAAE,EAAFA;AARK,GAAP;AAUD;;;;"}